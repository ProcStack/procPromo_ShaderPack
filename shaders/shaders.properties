#Minecraft Settings
oldLighting = true
underwaterOverlay = false

frustum.culling = true
shadow.culling = false
variable.float.tempVal = min(1.0,temperature*4.0)
uniform.float.BiomeTemp = tempVal
#1.0 - tempVal*tempVal*(3.0-2.0*tempVal)

#Block AO is written to color.a when true
separateAo = true


moon = true
stars = false
vignette = false
dynamicHandLight = true
shadowTranslucent = true
backFace.translucent = true

sliders = BaseQuality LightBlackLevel LightWhiteLevel GlowBrightness DetailBlurring EdgeShading ShadowSampleCount shadowMapResolution DebugView

screen.columns = 2
screen = PROC_PROMO BaseQuality <empty> <empty> LightBlackLevel LightWhiteLevel GlowBrightness WorldColor DetailBlurring EdgeShading UnderWaterBlur SolidLeaves <empty> <empty> ShadowSampleCount shadowMapResolution DebugView <empty> 

entities.glowing.depth = false

alphaTest.gbuffers_terrain = off
# alphaTest.gbuffers_entities = off
alphaTest.gbuffers_skytextured = off
alphaTest.gbuffers_skybasic = off
alphaTest.gbuffers_weather = off
alphaTest.gbuffers_armor_glint = off

beacon.beam.depth = false
beacon.beam.shadow = false
entities.glowing.depth = false

# -- -- --

variable.float.texelSizeX = 1.0/viewWidth
variable.float.texelSizeY = 1.0/viewHeight
uniform.vec2.texelSize=vec2(texelSizeX,texelSizeY)

uniform.float.invFar = 1.0/far

# -- -- --

variable.float.normSunVec = sqrt( sunPosition.x*sunPosition.x + sunPosition.y*sunPosition.y + sunPosition.z*sunPosition.z )
variable.float.normUpVec = sqrt( upPosition.x*upPosition.x + upPosition.y*upPosition.y + upPosition.z*upPosition.z )

variable.float.sunPosX = sunPosition.x/normSunVec
variable.float.sunPosY = sunPosition.y/normSunVec
variable.float.sunPosZ = sunPosition.z/normSunVec

uniform.vec3.sunVec=vec3(sunPosX,sunPosY,sunPosZ)

variable.float.upPosX = upPosition.x/normUpVec
variable.float.upPosY = upPosition.y/normUpVec
variable.float.upPosZ = upPosition.z/normUpVec

uniform.vec3.upVec=vec3(upPosX,upPosY,upPosZ)

uniform.float.dayNight = sunPosX*upPosX+sunPosY*upPosY+sunPosZ*upPosZ
uniform.float.sunMoonShadowInf = clamp((abs(dayNight)-0.004)*3.0, 0.0, 1.0)


uniform.float.eyeBrightnessFit = eyeBrightness.y * 0.004166666666666666
# 1/240


# -- -- --

texture.noise = textures/SoftNoise_512.png

scale.composite1 = 0.4
scale.composite2 = 0.3
scale.composite3 = 0.3
#scale.composite4=0.3




