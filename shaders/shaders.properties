#Minecraft Settings
oldLighting=true
underwaterOverlay=false

frustum.culling=true
shadow.culling=false
uniform.float.BiomeTemp=smooth(1, 1.0-temperature, 4, 4)

#Block AO is written to color.a when true
separateAo=true

moon=true
stars=true
vignette=false
dynamicHandLight=true
shadowTranslucent=true

sliders=BaseQuality LightBlackLevel LightWhiteLevel GlowBrightness DetailBluring EdgeShading

screen.columns=2
screen=PROC_PROMO BaseQuality <empty> <empty> LightBlackLevel LightWhiteLevel GlowBrightness WorldColor DetailBluring EdgeShading UnderWaterBlur SolidLeaves <empty> <empty> ShadowSampleCount shadowMapResolution DebugView <empty> 

beacon.beam.depth=false
entities.glowing.depth=false

alphaTest.gbuffers_terrain=off
# alphaTest.gbuffers_entities=off
alphaTest.gbuffers_skytextured=off
alphaTest.gbuffers_skybasic=off
alphaTest.gbuffers_weather=off
alphaTest.gbuffers_armor_glint=off


backFace.solid=false
backFace.cutout=true
backFace.cutoutMipped=true
backFace.translucent=true

uniform.vec2.ssTexelRatio=vec2( 1.0/viewWidth, 1.0/viewHeight)

variable.float.normSunVec = sqrt( sunPosition.x*sunPosition.x + sunPosition.y*sunPosition.y + sunPosition.z*sunPosition.z )
variable.float.normUpVec = sqrt( upPosition.x*upPosition.x + upPosition.y*upPosition.y + upPosition.z*upPosition.z )

variable.float.sunPosX = sunPosition.x/normSunVec
variable.float.sunPosY = sunPosition.y/normSunVec
variable.float.sunPosZ = sunPosition.z/normSunVec

uniform.vec3.sunVec=vec3(sunPosX,sunPosY,sunPosZ)

variable.float.upPosX = upPosition.x/normUpVec
variable.float.upPosY = upPosition.y/normUpVec
variable.float.upPosZ = upPosition.z/normUpVec

uniform.vec3.upVec=vec3(upPosX,upPosY,upPosZ)

uniform.float.dayNight = sunPosX*upPosX+sunPosY*upPosY+sunPosZ*upPosZ


uniform.float.moonPhaseFitted =  (abs((moonPhase/8)-0.5)*2.0)*0.45+0.15
#min(1.0,((moonPhase+4)%8)*.125)

uniform.float.sunMoonShadowInf = clamp((abs(dayNight)-0.004)*3.0, 0.0, 1.0)

uniform.float.eyeBrightnessFit = eyeBrightness.y * 0.004166666666666666
# eyeBrightness is 0-240;  1/240


uniform.float.isGlowing=if(is_glowing, 1.0, 0.0)


texture.noise=textures/ssaoNoise.png

scale.composite=0.4
scale.composite1=0.3
scale.composite2=0.3
#scale.composite4=0.3




#   variable.float.isHurt=smooth(1, if(is_hurt, 1.3, 0), 0, 10)
#   variable.float.isBurning=smooth(2, if(is_burning, 1.3, 0), 2, 10)
#   variable.float.isGlowing=smooth(3, if(is_glowing, 1.3, 0), 2, 10)
#   variable.float.isInvisible=smooth(4, if(is_invisible, 1.3, 0), 2, 10)
