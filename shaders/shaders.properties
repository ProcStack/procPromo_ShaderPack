#Minecraft Settings
oldLighting=false
underwaterOverlay = false

moon=true
stars=false
vignette=false
dynamicHandLight=true
shadowTranslucent=false

frustum.culling=true
uniform.float.BiomeTemp=.5
# uniform.float.BiomeTemp=smooth(1, temperature, 7, 7)

#Block AO is written to color.a when true
separateAo=true

sliders=BaseQuality LightBlackLevel DetailBluring EdgeShading LightingBrightness GlowBrightness

; //[512 768 1024 1536 2048 3172 4096 8192 16384]
const int shadowMapResOption //[512 768 1024 1536 2048 3172 4096 8192 16384]

  
screen.columns = 4
screen= <empty> BaseQuality LightBlackLevel <empty> <empty> <empty> <empty> <empty> <empty> DetailBluring EdgeShading <empty> <empty> LightingBrightness GlowBrightness <empty> <empty> SolidLeaves UnderWaterBlur <empty> <empty> <empty> <empty> <empty> <empty> ShadowSampleCount shadowMapResolution <empty> <empty> <empty> <empty> <empty> <empty> <empty> GreyWorld <empty>



alphaTest.gbuffers_terrain=off
# alphaTest.gbuffers_entities=off
alphaTest.gbuffers_skytextured=off
alphaTest.gbuffers_skybasic=off
alphaTest.gbuffers_weather=off
alphaTest.gbuffers_armor_glint=off
beacon.beam.depth=false
entities.glowing.depth=false

variable.float.texelSizeX = 1.0/viewWidth
variable.float.texelSizeY = 1.0/viewHeight
uniform.vec2.texelSize=vec2(texelSizeX,texelSizeY)


variable.float.normSunVec = sqrt( sunPosition.x*sunPosition.x + sunPosition.y*sunPosition.y + sunPosition.z*sunPosition.z )
variable.float.normUpVec = sqrt( upPosition.x*upPosition.x + upPosition.y*upPosition.y + upPosition.z*upPosition.z )

variable.float.sunPosX = sunPosition.x/normSunVec
variable.float.sunPosY = sunPosition.y/normSunVec
variable.float.sunPosZ = sunPosition.z/normSunVec

uniform.vec3.sunVec=vec3(sunPosX,sunPosY,sunPosZ)

variable.float.upPosX = upPosition.x/normUpVec
variable.float.upPosY = upPosition.y/normUpVec
variable.float.upPosZ = upPosition.z/normUpVec

uniform.vec3.upVec=vec3(upPosX,upPosY,upPosZ)
uniform.float.sunElevation = sunPosX*upPosX+sunPosY*upPosY+sunPosZ*upPosZ




uniform.float.isGlowing=if(is_glowing, 1.0, 0.0)


texture.noise=textures/SoftNoise_512.jpg

scale.composite1=0.4
scale.composite2=0.3
scale.composite3=0.3
#scale.composite4=0.3




#   variable.float.isHurt=smooth(1, if(is_hurt, 1.3, 0), 0, 10)
#   variable.float.isBurning=smooth(2, if(is_burning, 1.3, 0), 2, 10)
#   variable.float.isGlowing=smooth(3, if(is_glowing, 1.3, 0), 2, 10)
#   variable.float.isInvisible=smooth(4, if(is_invisible, 1.3, 0), 2, 10)
